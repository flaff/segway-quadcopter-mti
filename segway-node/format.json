WebSocket {
  domain: null,
  _events: {
    open: [
      Function
      :
      onOpenSocket
    ]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  _socket: Socket {
  _connecting: false,
  _hadError: false,
  _handle: TCP {
  bytesRead: 175,
  _externalStream: {},
  fd: -1,
  reading: true,
  owner: [
    Circular
  ],
  onread: [
    Function
    :
    onread
  ],
  onconnection: null,
  writeQueueSize: 0
},
_parent: null,
_host: 'localhost',
_readableState:
ReadableState {
objectMode: false,
highWaterMark: 16384,
buffer: [],
length: 0,
pipes: null,
pipesCount: 0,
flowing: true,
ended: false,
endEmitted: false,
reading: false,
sync: false,
needReadable: true,
emittedReadable: false,
readableListening: false,
resumeScheduled: true,
defaultEncoding: 'utf8',
ranOut: false,
awaitDrain: 0,
readingMore: false,
decoder: null,
encoding: null
},
readable: true,
domain: null,
_events: {end: [Object],
finish: [Function: onSocketFinish],
_socketEnd: [Function: onSocketEnd],
drain: [Function: ondrain],
close: [Object],
error: [Object],
data: [Object] },
_eventsCount: 7,
_maxListeners: undefined,
_writableState: WritableState {
objectMode: false,
highWaterMark: 16384,
needDrain: false,
ending: false,
ended: false,
finished: false,
decodeStrings: false,
defaultEncoding: 'utf8',
length: 0,
writing: false,
corked: 0,
sync: false,
bufferProcessing: false,
onwrite: [Function],
writecb: null,
writelen: 0,
bufferedRequest: null,
lastBufferedRequest: null,
pendingcb: 0,
prefinished: false,
errorEmitted: false,
bufferedRequestCount: 0,
corkedRequestsFree: [Object] },
writable: true,
allowHalfOpen: false,
destroyed: false,
_bytesDispatched: 223,
_sockname: null,
_pendingData: null,
_pendingEncoding: '',
server: null,
_server: null,
parser:
HTTPParser {
'0': [Function: parserOnHeaders],
'1': [Function: parserOnHeadersComplete],
'2': [Function: parserOnBody],
'3': [Function: parserOnMessageComplete],
'4': null,
_headers: [],
_url: '',
_consumed: false,
socket: [Circular],
incoming: [Object],
outgoing: [Object],
maxHeaderPairs: 2000,
onIncoming: [Function: parserOnIncomingClient] },
_httpMessage: ClientRequest {
domain: null,
_events: [Object],
_eventsCount: 2,
_maxListeners: undefined,
output: [],
outputEncodings: [],
outputCallbacks: [],
outputSize: 0,
writable: true,
_last: true,
chunkedEncoding: false,
shouldKeepAlive: true,
useChunkedEncodingByDefault: false,
sendDate: false,
_removedHeader: [Object],
_contentLength: 0,
_hasBody: true,
_trailer: '',
finished: true,
_headerSent: true,
socket: [Circular],
connection: [Circular],
_header: 'GET / HTTP/1.1\r\nConnection: Upgrade\r\nUpgrade: websocket\r\
nHost: localhost: 4820\r\nSec-WebSocket-Version: 13\r\nSec-WebSocket-Key: MTMtMTQ
4MDYxNDgzMTU2NA==\r\nSec-WebSocket-Extensions: permessage-deflate; client_max_wi
ndow_bits\r\n\r\n',
_headers: [Object],
_headerNames: [Object],
_onPendingData: null,
agent: [Object],
socketPath: undefined,
method: 'GET',
path: '/',
_ended: false,
parser: [Object],
res: [Object],
upgradeOrConnect: true
},
read: [Function],
_consuming: true,
_idleNext: null,
_idlePrev: null,
_idleTimeout: -1
},
_ultron:
Ultron {
id: 0,
ee: Socket {
_connecting: false,
_hadError: false,
_handle: [Object],
_parent: null,
_host: 'localhost',
_readableState: [Object],
readable: true,
domain: null,
_events: [Object],
_eventsCount: 7,
_maxListeners: undefined,
_writableState: [Object],
writable: true,
allowHalfOpen: false,
destroyed: false,
_bytesDispatched: 223,
_sockname: null,
_pendingData: null,
_pendingEncoding: '',
server: null,
_server: null,
parser: [Object],
_httpMessage: [Object],
read: [Function],
_consuming: true,
_idleNext: null,
_idlePrev: null,
_idleTimeout: -1
}
},
_closeReceived: false,
bytesReceived: 0,
readyState: 1,
supports: {
binary: true
},
extensions: {
'permessage-deflate': PerMessageDeflate {
_options: true,
_isServer: false,
_inflate: null,
_deflate: null,
params: {},
_maxPayload: 0 }},
_binaryType: 'nodebuffer',
_isServer: false,
url: 'ws://localhost:4820',
protocolVersion: 13,
_receiver: Receiver {
fragmentedBufferPool: BufferPool {
_growStrategy: [Function: bound],
_shrinkStrategy: [Function: bound],
_buffer: <Buffer 20 00 00 00 22 00 00 00 00 00 00 00 00 00 00 00 80 db 9
b 71 99 01 00 00 70 d6 9b 71 99 01 00 00 22 00 00 00 ff ff ff ff 00 00 00 00 00
00 00 00 00 00 ... >,
_offset: 0,
_used: 0,
_changeFactor: 0,
size: [Getter],
used: [Getter] },
unfragmentedBufferPool: BufferPool {
_growStrategy: [Function: bound],
_shrinkStrategy: [Function: bound],
_buffer: <Buffer 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0
0 00 00 00 00 00 58 e8 9b 71 99 01 00 00 40 e8 9b 71 99 01 00 00 e8 e8 9b 71 99
01 00 00 00 00 ... >,
_offset: 0,
_used: 0,
_changeFactor: 0,
size: [Getter],
used: [Getter] },
extensions: {'permessage-deflate': [Object] },
maxPayload: 0,
currentPayloadLength: 0,
state: {activeFragmentedOperation: null,
lastFragment: false,
masked: false,
opcode: 0,
fragmentedOperation: false
},
overflow: [],
headerBuffer: <Buffer 00 00 00 00 00 00 00 00 08 00>,
expectOffset: 0,
expectBuffer: <Buffer 00 00>,
expectHandler: [Function],
currentMessage: [],
currentMessageLength: 0,
messageHandlers: [],
dead: false,
processing: false,
onerror: [Function: onerror],
ontext: [Function: ontext],
onbinary: [Function: onbinary],
onclose: [Function: onclose],
onping: [Function: onping],
onpong: [Function: onpong] },
_sender: Sender {
domain: null,
_events: {error: [Function: onerror] },
_eventsCount: 1,
_maxListeners: undefined,
_socket: Socket {
_connecting: false,
_hadError: false,
_handle: [Object],
_parent: null,
_host: 'localhost',
_readableState: [Object],
readable: true,
domain: null,
_events: [Object],
_eventsCount: 7,
_maxListeners: undefined,
_writableState: [Object],
writable: true,
allowHalfOpen: false,
destroyed: false,
_bytesDispatched: 223,
_sockname: null,
_pendingData: null,
_pendingEncoding: '',
server: null,
_server: null,
parser: [Object],
_httpMessage: [Object],
read: [Function],
_consuming: true,
_idleNext: null,
_idlePrev: null,
_idleTimeout: -1
},
extensions: {'permessage-deflate': [Object] },
firstFragment: true,
compress: false,
messageHandlers: [],
processing: false
}
}
